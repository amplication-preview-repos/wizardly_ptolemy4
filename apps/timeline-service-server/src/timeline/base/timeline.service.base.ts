/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Timeline as PrismaTimeline } from "@prisma/client";

export class TimelineServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.TimelineCountArgs, "select">): Promise<number> {
    return this.prisma.timeline.count(args);
  }

  async timelines(
    args: Prisma.TimelineFindManyArgs
  ): Promise<PrismaTimeline[]> {
    return this.prisma.timeline.findMany(args);
  }
  async timeline(
    args: Prisma.TimelineFindUniqueArgs
  ): Promise<PrismaTimeline | null> {
    return this.prisma.timeline.findUnique(args);
  }
  async createTimeline(
    args: Prisma.TimelineCreateArgs
  ): Promise<PrismaTimeline> {
    return this.prisma.timeline.create(args);
  }
  async updateTimeline(
    args: Prisma.TimelineUpdateArgs
  ): Promise<PrismaTimeline> {
    return this.prisma.timeline.update(args);
  }
  async deleteTimeline(
    args: Prisma.TimelineDeleteArgs
  ): Promise<PrismaTimeline> {
    return this.prisma.timeline.delete(args);
  }
}
